"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs-extra");
var constants_1 = require("./constants");
var copyFileSync = require('fs-copy-file-sync');
exports.cleanup = function () {
    fs.removeSync('.clasp.json');
    fs.removeSync('.claspignore');
    fs.removeSync('Code.js');
    fs.removeSync('appsscript.json');
};
exports.setup = function () {
    fs.writeFileSync('.clasp.json', constants_1.CLASP_SETTINGS.valid);
    fs.writeFileSync('appsscript.json', constants_1.TEST_APPSSCRIPT_JSON);
};
exports.rndStr = function () { return Math.random().toString(36).substr(2); };
exports.backupSettings = function () {
    // fs.copyFileSync isn't supported in Node 6/7
    if (fs.existsSync(constants_1.CLASP_PATHS.rcGlobal)) {
        copyFileSync(constants_1.CLASP_PATHS.rcGlobal, constants_1.CLASP_PATHS.rcGlobal + "~");
    }
    if (fs.existsSync(constants_1.CLASP_PATHS.rcLocal)) {
        copyFileSync(constants_1.CLASP_PATHS.rcLocal, constants_1.CLASP_PATHS.rcLocal + "~");
    }
    if (fs.existsSync(constants_1.CLASP_PATHS.settingsLocal)) {
        copyFileSync(constants_1.CLASP_PATHS.settingsLocal, constants_1.CLASP_PATHS.settingsLocal + "~");
    }
};
exports.restoreSettings = function () {
    if (fs.existsSync(constants_1.CLASP_PATHS.rcGlobal + "~")) {
        fs.renameSync(constants_1.CLASP_PATHS.rcGlobal + "~", constants_1.CLASP_PATHS.rcGlobal);
    }
    if (fs.existsSync(constants_1.CLASP_PATHS.rcLocal + "~")) {
        fs.renameSync(constants_1.CLASP_PATHS.rcLocal + "~", constants_1.CLASP_PATHS.rcLocal);
    }
    if (fs.existsSync(constants_1.CLASP_PATHS.settingsLocal + "~")) {
        fs.renameSync(constants_1.CLASP_PATHS.settingsLocal + "~", constants_1.CLASP_PATHS.settingsLocal);
    }
};
